#!/usr/bin/env bash

# Check Global flag
if [[ "$ADDON_GLOBAL" != "true" ]]; then
	echo -e "[PRE-INSTALL] ERROR: Mkcert addon should installed globally, use 'fin addon install mkcert -g'"
	exit 1
fi

CONFIG_DIR="$HOME/.docksal"
CONFIG_CERTS=${CONFIG_CERTS:-$HOME/.docksal/certs}
MKCERT_BIN="$CONFIG_DIR/bin/mkcert"
MKCERT_ADDON="$CONFIG_DIR/addons/mkcert"

REQUIREMENTS_MKCERT=1.4.1
URL_MKCERT_MAC="https://github.com/FiloSottile/mkcert/releases/download/v${REQUIREMENTS_MKCERT}/mkcert-v${REQUIREMENTS_MKCERT}-darwin-amd64"
URL_MKCERT_NIX="https://github.com/FiloSottile/mkcert/releases/download/v${REQUIREMENTS_MKCERT}/mkcert-v${REQUIREMENTS_MKCERT}-linux-amd64"
URL_MKCERT_WIN="https://github.com/FiloSottile/mkcert/releases/download/v${REQUIREMENTS_MKCERT}/mkcert-v${REQUIREMENTS_MKCERT}-windows-amd64.exe"

if [[ "$TERM" != "dumb" ]]; then
	# Console colors
	red='\033[0;91m'
	red_bg='\033[101m'
	yellow_bg='\033[43m'
	lightmagenta_bg='\033[0;105m'
	green='\033[0;32m'
	green_bg='\033[42m'
	yellow='\033[0;33m'
	yellow_bold='\033[1;33m'
	blue='\033[0;34m'
	lime='\033[0;92m'
	acqua='\033[0;96m'
	magenta='\033[0;35m'
	lightmagenta='\033[0;95m'
	NC='\033[0m'
fi

echo-red ()      { echo -e "${red}$1${NC}"; }
echo-green ()    { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow ()   { echo -e "${yellow}$1${NC}"; }

echo-warning ()
{
	echo -e "${yellow_bg} WARNING: ${NC} ${yellow}$1${NC}";
	shift
	for arg in "$@"; do
		echo -e "           $arg"
	done
}

echo-error ()
{
	echo -e "${red_bg} ERROR: ${NC} ${red}$1${NC}"
	shift
	for arg in "$@"; do
		echo -e "        $arg"
	done
}

echo-alert ()
{
	echo -e "${lightmagenta_bg} ALERT: ${NC} ${lightmagenta}$1${NC}"
	shift
	for arg in "$@"; do
		echo -e "         $arg"
	done
}

# print string in $1 for $2 times
echo-repeat ()
{
    seq  -f $1 -s '' $2; echo
}

# prints message to stderr
echo-stderr ()
{
	(>&2 echo "$@")
}

# Get path to .docksal folder using upfind
get_project_path ()
{
	if [[ "$DOCKSAL_PATH" == "" ]]; then
		DOCKSAL_PATH=$(upfind ".docksal")
	fi
	# If we reached $HOME, then we did not find the project root.
	if [[ "$DOCKSAL_PATH" != "$HOME" ]]; then
		echo "$DOCKSAL_PATH"
	fi
}

is_linux ()
{
	[[ "$OS_TYPE" == "Linux" ]]
}

# TODO: drop this function in May 2020 to complete Babun deprecation
is_windows ()
{
	[[ "$OS_TYPE" == "Cygwin" ]]
}

is_wsl ()
{
	[[ "$OS_TYPE" == "WSL" ]]
}

is_mac ()
{
	[[ "$OS_TYPE" == "Darwin" ]]
}

if [[ "$(mkcert --version 2>&1)" != "v${REQUIREMENTS_MKCERT}" ]]; then
	is_linux && URL_MKCERT=$URL_MKCERT_NIX
	is_wsl && URL_MKCERT=$URL_MKCERT_NIX
	is_windows && URL_MKCERT=$URL_MKCERT_WIN
	is_mac && URL_MKCERT=$URL_MKCERT_MAC

	echo-green "[PRE-INSTALL] INFO: Installing mkcert..."
	curl -fL# "$URL_MKCERT" -o "$MKCERT_BIN" && \
	chmod +x "$MKCERT_BIN" && \

	if (mkcert --version &>/dev/null); then
		echo-green "[PRE-INSTALL] INFO: mkcert version $(mkcert --version) installed"
	else
		echo-red "[PRE-INSTALL] ERROR: mkcert installation/upgrade failed."
		exit 1
	fi

	echo-green "[PRE-INSTALL] INFO: Initializing mkcert"
	sudo mkcert -install

	mkdir -p "${CONFIG_CERTS}"
else
	echo-green "[PRE-INSTALL] INFO: mkcert binary allready installed; found $(which mkcert)"
fi
